"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[713],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var i=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,a=function(e,t){if(null==e)return{};var r,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=i.createContext({}),c=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||n;return r?i.createElement(f,o(o({ref:t},d),{},{components:r})):i.createElement(f,o({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,o=new Array(n);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<n;c++)o[c]=r[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2117:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var i=r(7462),a=(r(7294),r(3905));const n={slug:"redis-durability",title:"Redis Durability",authors:"ilolis",tags:["durability","microservices","redis","replication"]},o="Redis durability",s={permalink:"/redis-durability",editUrl:"https://github.com/ilolis/my-blog/tree/main/blog/2023-04-27-redis-durability.md",source:"@site/blog/2023-04-27-redis-durability.md",title:"Redis Durability",description:"Redis Fundamentals",date:"2023-04-27T00:00:00.000Z",formattedDate:"April 27, 2023",tags:[{label:"durability",permalink:"/tags/durability"},{label:"microservices",permalink:"/tags/microservices"},{label:"redis",permalink:"/tags/redis"},{label:"replication",permalink:"/tags/replication"}],readingTime:8.145,hasTruncateMarker:!0,authors:[{name:"Ilias Lolis",title:"Software Engineer",url:"https://github.com/ilolis",imageURL:"https://github.com/ilolis.png",key:"ilolis"}],frontMatter:{slug:"redis-durability",title:"Redis Durability",authors:"ilolis",tags:["durability","microservices","redis","replication"]},nextItem:{title:"Welcome To My Blog",permalink:"/welcome-to-my-blog"}},l={authorsImageUrls:[void 0]},c=[{value:"Redis Fundamentals",id:"redis-fundamentals",level:3}],d={toc:c},u="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,i.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"redis-fundamentals"},"Redis Fundamentals"),(0,a.kt)("p",null,"Redis is a high-performance, distributed, in-memory data store that can be used as a database, cache or message broker. It is an open-source, NoSQL database that is designed to deliver high performance and low latency access to data. The core difference between Redis and a traditional database such as Postgres, MySQL and DynamoDB is that Redis stores data in memory and not in disk, a ",(0,a.kt)("em",{parentName:"p"},"feature")," that gives Redis ultra fast response times."),(0,a.kt)("p",null,"However, the approach of storing data in-memory can be prone to data loss in the event of a system crash or power failure. In contrast, storing data persistently on disk provides durability, but at the cost of slower access times due to disk I/O. In this article, we will discuss methods for configuring Redis to be more resilient, as an out-of-the-box configuration of Redis could result in complete data loss if your Redis instance crashes."))}p.isMDXComponent=!0}}]);